/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.14
 * Generated at: 2019-01-02 07:38:40 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class index_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSP 只允许 GET、POST 或 HEAD。Jasper 还允许 OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\n");
      out.write("\n");
      out.write("\n");
      out.write("<!DOCTYPE html>\n");
      out.write("<html lang=\"en\">\n");
      out.write("<head>\n");
      out.write("\t<meta charset=\"UTF-8\">\n");
      out.write("\t<title>EyE眼科</title>\n");
      out.write("</head>\n");
      out.write("<style>\n");
      out.write("\n");
      out.write("\thtml,body{\n");
      out.write("\t\theight: 100%;\n");
      out.write("\t\twidth: 100%;\n");
      out.write("\t\tmargin: 0;\n");
      out.write("\t\tpadding: 0;\n");
      out.write("\t}\n");
      out.write("\tbody{\n");
      out.write("\t\tdisplay: flex;\n");
      out.write("\t\tflex-direction: row;\n");
      out.write("\t\tjustify-content: center;\n");
      out.write("\t\talign-items: center;\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\n");
      out.write("\t.panel{\n");
      out.write("\t\twidth: 80%;\n");
      out.write("\t\theight: 80%;\n");
      out.write("\t\t\n");
      out.write("\t}\n");
      out.write("\ttable{\n");
      out.write("\t\twidth: 100%;\n");
      out.write("\t\tfont-size: 2em;\n");
      out.write("\t\tbackground: #eddcdc;\n");
      out.write("\t}\n");
      out.write("\ttd:nth-child(1){\n");
      out.write("\t\ttext-align: right;\n");
      out.write("\t}\n");
      out.write("\ttd{\n");
      out.write("\tfont-size:16px;\n");
      out.write("\t\tpadding-top: 10px;\n");
      out.write("\t}\n");
      out.write("\t.input{\n");
      out.write("\t\twidth: 300px;\n");
      out.write("\t\tmargin-top: 10px;\n");
      out.write("\t}\n");
      out.write("\t#btn{\n");
      out.write("\t\tfont-size: 0.8em;\n");
      out.write("\t\tmargin: 10px;\n");
      out.write("\t\tpadding: 10px;\n");
      out.write("\t\tborder-radius:5px; \n");
      out.write("\t}\n");
      out.write("</style>\n");
      out.write("\n");
      out.write("\n");
      out.write("<script>\n");
      out.write("function login(f){\n");
      out.write("\tvar ok = true;\n");
      out.write("\tvar adminName = f.adminName.value;\n");
      out.write("\tvar rege = /^[A-Za-z]{2,20}$/;\n");
      out.write("\tvar adminMsg = document.getElementById(\"adminMsg\");\n");
      out.write("\tadminMsg.innerText = \"\";\n");
      out.write("\tvar passwordMsg = document.getElementById(\"passwordMsg\");\n");
      out.write("\tpasswordMsg.innerText = \"\";\n");
      out.write("\t\n");
      out.write("\tif(!rege.test(adminName)){\n");
      out.write("\t\tok = false;\n");
      out.write("\t\tvar adminMsg = document.getElementById(\"adminMsg\");\n");
      out.write("\t\tadminMsg.innerText = \"登录名格式错误\";\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\tvar pwd = f.password.value;\n");
      out.write("\tvar reg = /^[0-9a-zA-Z]{6,12}$/;\n");
      out.write("\tif(!reg.test(pwd)){\n");
      out.write("\t\tok = false;\n");
      out.write("\t\tvar passwordMsg = document.getElementById(\"passwordMsg\");\n");
      out.write("\t\tpasswordMsg.innerText = \"密码格式错误\";\n");
      out.write("\t}\n");
      out.write("\t\n");
      out.write("\treturn ok;\n");
      out.write("}\n");
      out.write("\n");
      out.write("</script>\n");
      out.write("\n");
      out.write("<body>\n");
      out.write("\n");
      out.write("<div class=\"panel\">\n");
      out.write("\t<h1>Eye眼科后台管理系统</h1>\n");
      out.write("\t<form action=\"login\" method=\"post\" onsubmit=\"return login(this)\">\n");
      out.write("\t\t<table>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>登录名</td>\n");
      out.write("\t\t\t\t<td><input class=\"input\" type=\"text\" name=\"adminName\" id=\"adminName\"></td>\n");
      out.write("\t\t\t\t<td id=\"adminMsg\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td>密码</td>\n");
      out.write("\t\t\t\t<td><input class=\"input\" type=\"password\" name=\"password\" id=\"password\"></td>\n");
      out.write("\t\t\t\t<td id=\"passwordMsg\"></td>\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t\t<tr>\n");
      out.write("\t\t\t\t<td colspan=\"3\">十天免登录<input type=\"checkbox\" name=\"autologin\"/></td>\n");
      out.write("\t\t\t\t<td >\n");
      out.write("\t\t\t\t\n");

	String msg = (String)request.getAttribute("msg");
	if(msg != null){
		out.print(msg);	//out是自带的一个输出方法
		}

      out.write("\n");
      out.write("\t\t\t\t\t<input type=\"submit\" value=\"登录\" id=\"btn\">\n");
      out.write("\t\t\t\t</td>\n");
      out.write("\t\t\t\t\n");
      out.write("\t\t\t</tr>\n");
      out.write("\t\t</table>\n");
      out.write("\t</form>\n");
      out.write("</div>\n");
      out.write("\t访问人数： ");
      out.print(application.getAttribute("count") );
      out.write("\n");
      out.write("</body>\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
